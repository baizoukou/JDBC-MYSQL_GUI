import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class MFrame extends javax.swing.JFrame {
    
    private Connection conn;  //For connection
    private Statement statement;  //To run query
    private PreparedStatement prepare_statement;  //to run query
    private ResultSet rs;  // to store Result of database
    private String query;  //to  write query
    private boolean flag = true; //to control message box control
    
    public MFrame() throws Exception {
        
        
        Class.forName("com.mysql.cj.jdbc.Driver");  //Loading the driver from JDBC
        conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/test","root","");  //getting connection 
        statement =conn.createStatement();  //preparing statement
        query="";  //intializing query
        prepare_statement=null;  //intializing prepared statement
        rs=null;  //initializing resultset
        initComponents();
        
    }

    /**
     * Method is called from within the constructor to initialize the form and
     *  Method always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    /*
     *  <editor-fold defaultstate="collapsed" desc="Generated Code">
     *GEN-BEGIN:initComponents
     */
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_ssn = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_dob = new javax.swing.JTextField();
        txt_first_name = new javax.swing.JTextField();
        txt_surname = new javax.swing.JTextField();
        txt_salary = new javax.swing.JTextField();
        txt_gender = new javax.swing.JTextField();
        btn_previous = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_search = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Employee Details");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("SSN");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("DOB");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("FirstName");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Surname");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Salary");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Gender");

        btn_previous.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_previous.setText("Previous");
        btn_previous.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_previousActionPerformed(evt);
            }
        });

        btn_next.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_next.setText("Next");
        btn_next.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_add.setText("Add");
        btn_add.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_delete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_update.setText("Update");
        btn_update.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_search.setText("Search");
        btn_search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        btn_clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_previous)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btn_delete))
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_ssn, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_surname, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_first_name, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btn_update)
                                    .addGap(18, 18, 18)
                                    .addComponent(btn_search)
                                    .addGap(31, 31, 31)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btn_clear)
                                        .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_ssn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_first_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_add)
                            .addComponent(btn_delete)
                            .addComponent(btn_search)
                            .addComponent(btn_clear)
                            .addComponent(btn_update))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_previous)
                            .addComponent(btn_next)))
                    .addComponent(jLabel2))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }
    
    /*
     *  </editor-fold>//GEN-END:initComponents
     */

    private void btn_previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_previousActionPerformed
            
        query="Select * from employeeDetails";  //query to fetch data
        ArrayList<Result> list=new ArrayList<Result>();  //Arraylist to store data from database
        
        try {
            rs=statement.executeQuery(query);  //execute query
            while(rs.next())  //fetching data from Result set
            {
                list.add(new Result(rs.getString("SSn"),rs.getString("DOB"),rs.getString("FirstName"),rs.getString("Surname"),rs.getInt("Salary"),rs.getString("Gender")));  //creating object using Result set data and adding in the list
            }
            
            for(int i=list.size()-1;i>=0;i--)
            {
                if(list.get(i).SSn.equalsIgnoreCase(txt_ssn.getText()))
                {
                    txt_ssn.setText(list.get(i-1).SSn);  //showing data in field
                    txt_dob.setText(list.get(i-1).DOB);
                    txt_first_name.setText(list.get(i-1).FirstName);
                    txt_surname.setText(list.get(i-1).Surname);
                    txt_salary.setText(String.format("%s",list.get(i-1).Salary));
                    txt_gender.setText(list.get(i-1).Gender);
                    break;
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
         catch (IndexOutOfBoundsException e)
        {
                JOptionPane.showMessageDialog(null, "There is no previous record","Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }
    
    /*
     * GEN-LAST:event_btn_previousActionPerformed
     */

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
       query="Select * from employeeDetails";  //Select query to fetch data
        ArrayList<Result> list=new ArrayList<Result>();  //array list to store data
        
        try {
            rs=statement.executeQuery(query);  //run query
            while(rs.next())  //fetching data from Result set
            {
                list.add(new Result(rs.getString("SSn"),rs.getString("DOB"),rs.getString("FirstName"),
                		rs.getString("Surname"),rs.getInt("Salary"),rs.getString("Gender")));  //creating object using Result set data and adding in the list
            }
            
            for(int i=0;i<list.size();i++)
            {
                if(list.get(i).SSn.equalsIgnoreCase(txt_ssn.getText()))
                {
                    txt_ssn.setText(list.get(i+1).SSn);  //showing data in field
                    txt_dob.setText(list.get(i+1).DOB);
                    txt_first_name.setText(list.get(i+1).FirstName);
                    txt_surname.setText(list.get(i+1).Surname);
                    txt_salary.setText(String.format("%s",list.get(i+1).Salary));
                    txt_gender.setText(list.get(i+1).Gender);
                    break;
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (IndexOutOfBoundsException e)
        {
                JOptionPane.showMessageDialog(null, "There is no next record","Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }
    /*
     * GEN-LAST:event_btn_nextActionPerformed
     */

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
         query="Insert into employeeDetails values (?,?,?,?,?,?)";  //Insert query
        try {
            prepare_statement=conn.prepareStatement(query);  //preparing query
            prepare_statement.setString(1, txt_ssn.getText());
            prepare_statement.setString(2, txt_dob.getText());
            prepare_statement.setString(3, txt_first_name.getText());
            prepare_statement.setString(4, txt_surname.getText());
            prepare_statement.setInt(5, Integer.parseInt(txt_salary.getText()));
            prepare_statement.setString(6, txt_gender.getText());
            prepare_statement.executeUpdate();  //executing query
            JOptionPane.showMessageDialog(null, "Record sucessfully added","Add Record", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        txt_ssn.setText("");  //making textfield empty
        txt_dob.setText("");
        txt_first_name.setText("");
        txt_surname.setText("");
        txt_salary.setText("");
        txt_gender.setText("");
        
    } 
    
    /*
     *  GEN-LAST:event_btn_addActionPerformed
     */
    

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
          String sql="Delete from employeeDetails where SSN = (?)";  //Deleting data from database on the basis of SSN
          try{
          prepare_statement=conn.prepareStatement(sql);  //preparing query
          prepare_statement.setString(1, txt_ssn.getText());
          prepare_statement.executeUpdate();  //executing query
          JOptionPane.showMessageDialog(null, "Record Sucessfully Delete","Delete Records", JOptionPane.INFORMATION_MESSAGE);
          }
          catch(SQLException ex)
          {
              ex.printStackTrace();
          }
    }
    
    /*
     * GEN-LAST:event_btn_deleteActionPerformed
     */

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        String sql=null;  
        if(txt_ssn.getText()!=null)
          {
              if(!txt_dob.getText().equalsIgnoreCase(""))
                {
                    try {
                            sql = "UPDATE employeeDetails set DOB = ? where SSn= ? ";  //query to update data
                            prepare_statement=conn.prepareStatement(sql);  //prepare statement
                            prepare_statement.setString(1, txt_dob.getText());
                            prepare_statement.setString(2, txt_ssn.getText());
                            prepare_statement.executeUpdate();  //run query
                           JOptionPane.showMessageDialog(null, "Record Sucessfully updated","Updated Record",
                        		   JOptionPane.INFORMATION_MESSAGE);
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                }
              if(!txt_dob.getText().equalsIgnoreCase(""))
                {
                    try {
                            sql = "UPDATE employeeDetails set FirstName = ? where SSn= ? ";
                            prepare_statement=conn.prepareStatement(sql);
                            prepare_statement.setString(1, txt_first_name.getText());
                            prepare_statement.setString(2, txt_ssn.getText());
                            prepare_statement.executeUpdate();
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                      JOptionPane.showMessageDialog(null, "Record Sucessfully updated","Updated Record", 
                    		  JOptionPane.INFORMATION_MESSAGE);
                }
              if(!txt_dob.getText().equalsIgnoreCase(""))
                {
                    try {
                             sql = "UPDATE employeeDetails set Surname = ? where SSn= ? ";
                            prepare_statement=conn.prepareStatement(sql);
                            prepare_statement.setString(1, txt_surname.getText());
                            prepare_statement.setString(2, txt_ssn.getText());
                            prepare_statement.executeUpdate();
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                      JOptionPane.showMessageDialog(null, "Record Sucessfully updated","Updated Record",
                    		  JOptionPane.INFORMATION_MESSAGE);
                }
              if(!txt_dob.getText().equalsIgnoreCase(""))
                {
                    try {
                            sql = "UPDATE employeeDetails set Salary = ? where SSn= ? ";
                            prepare_statement=conn.prepareStatement(sql);
                            prepare_statement.setInt(1, Integer.parseInt(txt_salary.getText()));
                            prepare_statement.setString(2, txt_ssn.getText());
                            prepare_statement.executeUpdate();
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                      JOptionPane.showMessageDialog(null, "Record Sucessfully updated","Updated Record", 
                    		  JOptionPane.INFORMATION_MESSAGE);
                }
              if(!txt_dob.getText().equalsIgnoreCase(""))
                {
                    try {
                             sql = "UPDATE employeeDetails set Gender = ? where SSn= ? ";
                            prepare_statement=conn.prepareStatement(sql);
                            prepare_statement.setString(1, txt_gender.getText());
                            prepare_statement.setString(2, txt_ssn.getText());
                            prepare_statement.executeUpdate();
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                      JOptionPane.showMessageDialog(null, "Record Sucessfully updated","Updated Record", 
                    		  JOptionPane.INFORMATION_MESSAGE);
                }
              
          }
              
    }
    
    /*
     * GEN-LAST:event_btn_updateActionPerformed
     */

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        txt_ssn.setText("");  //clearing text fields
        txt_dob.setText("");
        txt_first_name.setText("");
        txt_surname.setText("");
        txt_salary.setText("");
        txt_gender.setText("");
    }
    /*
     * GEN-LAST:event_btn_clearActionPerformed
     */

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed

        query="Select SSn, DOB, FirstName, Salary, Gender from employeeDetails where Surname = '"      
        				+txt_surname.getText()+"';";  //select some data on the basis of surname
        
        try {
            rs=statement.executeQuery(query);  //run query
            
            while(rs.next())
            {
                txt_ssn.setText(rs.getString("SSn"));  //set data in textfield
                txt_dob.setText(rs.getString("DOB"));
                txt_first_name.setText(rs.getString("FirstName"));
                txt_salary.setText(String.format("%s",rs.getInt("Salary")));
                txt_gender.setText(rs.getString("Gender"));
                flag = false;
            }
            if(flag)
            {
                JOptionPane.showMessageDialog(null, "Not record found with desire name","Error", 
                		JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    /*
     * GEN-LAST:event_btn_searchActionPerformed
     */

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MFrame().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(MFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /* Variables declaration 
     * GEN-Start: Variable
     */
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_previous;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txt_dob;
    private javax.swing.JTextField txt_first_name;
    private javax.swing.JTextField txt_gender;
    private javax.swing.JTextField txt_salary;
    private javax.swing.JTextField txt_ssn;
    private javax.swing.JTextField txt_surname;
    /*
     *  End of variables declaration//GEN-END:variables
     */
}
